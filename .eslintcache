[{"/home/hp/Desktop/EXTRA/product-manager-app/src/index.js":"1","/home/hp/Desktop/EXTRA/product-manager-app/src/App.js":"2","/home/hp/Desktop/EXTRA/product-manager-app/src/context/auth.js":"3","/home/hp/Desktop/EXTRA/product-manager-app/src/route/index.js":"4","/home/hp/Desktop/EXTRA/product-manager-app/src/route/routes.js":"5","/home/hp/Desktop/EXTRA/product-manager-app/src/route/AuthRoute.jsx":"6","/home/hp/Desktop/EXTRA/product-manager-app/src/pages/signin/components/Sigin.jsx":"7","/home/hp/Desktop/EXTRA/product-manager-app/src/pages/signup/components/Signup.jsx":"8","/home/hp/Desktop/EXTRA/product-manager-app/src/pages/dashboard/components/Dashboard.jsx":"9","/home/hp/Desktop/EXTRA/product-manager-app/src/serviceWorker.js":"10","/home/hp/Desktop/EXTRA/product-manager-app/src/pages/dashboard/components/createProduct.jsx":"11","/home/hp/Desktop/EXTRA/product-manager-app/src/firebase/index.js":"12"},{"size":503,"mtime":1616058981353,"results":"13","hashOfConfig":"14"},{"size":1508,"mtime":1616058928373,"results":"15","hashOfConfig":"14"},{"size":1385,"mtime":1616058864385,"results":"16","hashOfConfig":"14"},{"size":106,"mtime":1616058754400,"results":"17","hashOfConfig":"14"},{"size":549,"mtime":1616064293128,"results":"18","hashOfConfig":"14"},{"size":564,"mtime":1616058801913,"results":"19","hashOfConfig":"14"},{"size":4280,"mtime":1616100904254,"results":"20","hashOfConfig":"14"},{"size":3978,"mtime":1616083304192,"results":"21","hashOfConfig":"14"},{"size":5791,"mtime":1616203840019,"results":"22","hashOfConfig":"14"},{"size":5344,"mtime":1616065657013,"results":"23","hashOfConfig":"14"},{"size":871,"mtime":1616109842358,"results":"24","hashOfConfig":"14"},{"size":547,"mtime":1616150689689,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"f7azye",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"/home/hp/Desktop/EXTRA/product-manager-app/src/index.js",[],["54","55"],"/home/hp/Desktop/EXTRA/product-manager-app/src/App.js",[],"/home/hp/Desktop/EXTRA/product-manager-app/src/context/auth.js",[],"/home/hp/Desktop/EXTRA/product-manager-app/src/route/index.js",[],"/home/hp/Desktop/EXTRA/product-manager-app/src/route/routes.js",[],"/home/hp/Desktop/EXTRA/product-manager-app/src/route/AuthRoute.jsx",[],"/home/hp/Desktop/EXTRA/product-manager-app/src/pages/signin/components/Sigin.jsx",["56","57","58"],"import React, { useContext, useState } from \"react\";\nimport { useToasts } from 'react-toast-notifications';\nimport { useHistory } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { AuthContext } from '../../../context/auth';\n\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\nconst Loader = () => (\n    <div className=\"spinner\">\n        <div className=\"bounce1\" />\n        <div className=\"bounce2\" />\n        <div className=\"bounce3\" />\n    </div>\n);\n\nexport const Signin = () => {\n  const [form] = Form.useForm();\n  const [formLayout, setFormLayout] = useState('horizontal');\n    const context = useContext(AuthContext);\n    const { addToast } = useToasts();\n    const history = useHistory();\n    const [loginInfo, setLoginInfo] = useState({ email: '', password: '' });\n    const [loading, setLoading] = useState(false);\n    /** This handles the input changes\n     * @param {object} e the onchange event object\n     */\n    const handleChange = e => {\n        setLoginInfo({\n            ...loginInfo, [e.target.name]: e.target.value,\n        });\n    };\n    const { email, password } = loginInfo;\n    \n    const onFormLayoutChange = ({ layout }) => {\n      setFormLayout(layout);\n    };\n\n    const signinUser = async () => {\n        let myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        let raw = JSON.stringify({\"email\": email,\"password\":password});\n        const requestOptions = {\n          method: 'POST',\n          headers: myHeaders,\n          body: raw,\n          redirect: 'follow'\n        };\n        try {\n         let fetchRes = await fetch(\"https://product-manager-app.herokuapp.com/api/signin\", requestOptions);\n                if(fetchRes.ok){\n                  console.log('here')\n                    const data = await fetchRes.json();\n                    context.login(data);\n                    addToast(`Welcome ${email}`, {\n                        appearance: 'success',\n                        autoDismiss: true,\n                    });\n                    history.push('/dashboard');\n                }else{\n                throw fetchRes;\n                }\n        } catch (e){\n            let msg = 'Login failed';\n            console.log(\"error\", e);\n                setLoading(false);\n                addToast(msg, {\n                    appearance: 'error',\n                    autoDismiss: true,\n                });\n            };\n        \n        };\n        const handleFormSubmit = e => {\n            const { username, password } = loginInfo;\n            if (username !== '' || password !== '') {\n                e.preventDefault();\n                setLoading(true);\n                signinUser();\n            }\n        };\n\n\n        const formItemLayout =\n        formLayout === 'horizontal'\n          ? {\n              labelCol: {\n                span: 4,\n              },\n              wrapperCol: {\n                span: 14,\n              },\n            }\n          : null;\n      const buttonItemLayout =\n        formLayout === 'horizontal'\n          ? {\n              wrapperCol: {\n                span: 14,\n                offset: 4,\n              },\n            }\n          : null;\n      return (\n        <div className=\"styledSection\">\n          <Form\n            {...formItemLayout}\n            layout={formLayout}\n            form={form}\n            initialValues={{\n              layout: formLayout,\n            }}\n            onValuesChange={onFormLayoutChange}\n          >\n            <Form.Item label=\"email\">\n              <Input placeholder=\"email\" name=\"email\" value={email} onChange={handleChange}/>\n            </Form.Item>\n            <Form.Item label=\"password\">\n              <Input placeholder=\"password\" name=\"password\" value={password} onChange={handleChange}/>\n            </Form.Item>\n            <Form.Item {...buttonItemLayout}>\n              <Button type=\"primary\"  onClick={handleFormSubmit}>\n                {\n                    !loading ? 'Login' : <Loader />\n                }\n                </Button>\n            </Form.Item>\n          </Form>\n        </div>\n      );\n};\n","/home/hp/Desktop/EXTRA/product-manager-app/src/pages/signup/components/Signup.jsx",["59"],"import React, { useState, useContext } from 'react';\nimport { useToasts } from 'react-toast-notifications';\nimport { useHistory, Link } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Form, Input, Button } from 'antd';\n\nconst Loader = () => (\n  <div className=\"spinner\">\n        <div className=\"bounce1\" />\n        <div className=\"bounce2\" />\n        <div className=\"bounce3\" />\n  </div>\n);\n\nexport const Signup = () => {\n  const [form] = Form.useForm();\n  const [formLayout, setFormLayout] = useState('horizontal');\n  const { addToast } = useToasts();\n  const history = useHistory();\n  const [signupInfo, setSignupInfo] = useState({ email: '', phoneNumber: '', address: '',password: '' });\n  const [loading, setLoading] = useState(false);\n\n  const handleChange = e => {\n    setSignupInfo({\n        ...signupInfo, [e.target.name]: e.target.value,\n    });\n};\nconst { email, password, phoneNumber, address } = signupInfo;\n\n  const onFormLayoutChange = ({ layout }) => {\n    setFormLayout(layout);\n  };\n\n  const signinUser = async () => {\n    let myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    let raw = JSON.stringify({\"email\": email,\"password\":password, \"phoneNumber\": phoneNumber, \"address\": address });\n    const requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n    try {\n     let fetchRes = await fetch(\"https://product-manager-app.herokuapp.com/api/signup\", requestOptions);\n            if(fetchRes.ok){\n                await fetchRes.json();\n                addToast(`Registration successful`, {\n                    appearance: 'success',\n                    autoDismiss: true,\n                });\n                history.push('/login');\n            }else{\n            throw fetchRes;\n            }\n    } catch (e){\n        let msg = 'Signup failed';\n            setLoading(false);\n            addToast(msg, {\n                appearance: 'error',\n                autoDismiss: true,\n            });\n        };\n    \n    };\n    const handleFormSubmit = e => {\n      console.log('here')\n        const { email, password, phoneNumber, address } = signupInfo;\n        if (email !== '' || password !== '' || phoneNumber !== '' || address !== '') {\n            e.preventDefault();\n            setLoading(true);\n            signinUser();\n        }\n    };\n\n  const formItemLayout =\n    formLayout === 'horizontal'\n      ? {\n          labelCol: {\n            span: 4,\n          },\n          wrapperCol: {\n            span: 14,\n          },\n        }\n      : null;\n  const buttonItemLayout =\n    formLayout === 'horizontal'\n      ? {\n          wrapperCol: {\n            span: 14,\n            offset: 4,\n          },\n        }\n      : null;\n  return (\n    <div className=\"styledSection\">\n      <Form\n        {...formItemLayout}\n        layout={formLayout}\n        form={form}\n        initialValues={{\n          layout: formLayout,\n        }}\n        onValuesChange={onFormLayoutChange}\n      >\n        <Form.Item label=\"email\">\n          <Input placeholder=\"email\" name=\"email\" value={email} onChange={handleChange}/>\n        </Form.Item>\n        <Form.Item label=\"phone\">\n          <Input placeholder=\"phone number\" name=\"phoneNumber\" value={phoneNumber} onChange={handleChange} />\n        </Form.Item>\n        <Form.Item label=\"address\">\n          <Input placeholder=\"address\" name=\"address\" value={address} onChange={handleChange}/>\n        </Form.Item>\n        <Form.Item label=\"password\">\n          <Input placeholder=\"password\" name=\"password\" value={password} onChange={handleChange}/>\n        </Form.Item>\n        <Form.Item {...buttonItemLayout}>\n          <Button type=\"primary\"  onClick={handleFormSubmit}>\n            {\n                !loading ? 'Submit' : <Loader />\n            }\n            </Button>\n        </Form.Item>\n        <p>Already have an account? <Link to=\"/login\">Login</Link></p>\n      </Form>\n    </div>\n  );\n};\n","/home/hp/Desktop/EXTRA/product-manager-app/src/pages/dashboard/components/Dashboard.jsx",["60","61","62","63","64","65","66","67"],"/home/hp/Desktop/EXTRA/product-manager-app/src/serviceWorker.js",[],"/home/hp/Desktop/EXTRA/product-manager-app/src/pages/dashboard/components/createProduct.jsx",[],"/home/hp/Desktop/EXTRA/product-manager-app/src/firebase/index.js",[],["68","69"],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":6,"column":31,"nodeType":"76","messageId":"77","endLine":6,"endColumn":39},{"ruleId":"74","severity":1,"message":"78","line":10,"column":7,"nodeType":"76","messageId":"77","endLine":10,"endColumn":13},{"ruleId":"74","severity":1,"message":"79","line":18,"column":7,"nodeType":"76","messageId":"77","endLine":18,"endColumn":17},{"ruleId":"74","severity":1,"message":"80","line":1,"column":27,"nodeType":"76","messageId":"77","endLine":1,"endColumn":37},{"ruleId":"74","severity":1,"message":"80","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":27},{"ruleId":"74","severity":1,"message":"81","line":4,"column":25,"nodeType":"76","messageId":"77","endLine":4,"endColumn":30},{"ruleId":"74","severity":1,"message":"82","line":26,"column":10,"nodeType":"76","messageId":"77","endLine":26,"endColumn":24},{"ruleId":"74","severity":1,"message":"83","line":34,"column":9,"nodeType":"76","messageId":"77","endLine":34,"endColumn":18},{"ruleId":"74","severity":1,"message":"84","line":38,"column":9,"nodeType":"76","messageId":"77","endLine":38,"endColumn":17},{"ruleId":"74","severity":1,"message":"85","line":42,"column":9,"nodeType":"76","messageId":"77","endLine":42,"endColumn":21},{"ruleId":"86","severity":1,"message":"87","line":64,"column":60,"nodeType":"88","messageId":"89","endLine":64,"endColumn":62},{"ruleId":"90","severity":1,"message":"91","line":121,"column":11,"nodeType":"92","endLine":146,"endColumn":2},{"ruleId":"70","replacedBy":"93"},{"ruleId":"72","replacedBy":"94"},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'Checkbox' is defined but never used.","Identifier","unusedVar","'layout' is assigned a value but never used.","'tailLayout' is assigned a value but never used.","'useContext' is defined but never used.","'Modal' is defined but never used.","'isModalVisible' is assigned a value but never used.","'showModal' is assigned a value but never used.","'handleOk' is assigned a value but never used.","'handleCancel' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",["95"],["96"],"no-global-assign","no-unsafe-negation"]